webpackJsonp([0xc0ed6e00809f],{416:function(n,s){n.exports={data:{site:{siteMetadata:{title:"EVLE",subtitle:"Knowledge is not consumed, it is shared",copyright:"© All rights reserved.",author:{name:"evle",twitter:"#"},disqusShortname:"",url:"https://evle.netlify.com"}},markdownRemark:{id:"/Users/evle/blog/src/pages/articles/2019-05-04---create-react-app/index.md absPath of file >>> MarkdownRemark",html:'<p>构建 React 应用的第一步是搭建 React 开发环境, \b\b 开发环境是项目的基石也是比较复杂繁琐的一个部分, 因此搭建一个脚手架工具来完成自动化的流程是必不可少的。Facebook 官方提供了一个有效且功能齐全的 React 应用脚手架工具<code class="language-text">create-react-app</code>, 本文通过分析<code class="language-text">create-react-app</code>的源码来了解如何编写一个脚手架工具来提高开发效能。</p>\n<p>React 脚手架工具分为 2 个部分:</p>\n<ul>\n<li>create-react-app</li>\n<li>react-scripts</li>\n</ul>\n<p><code class="language-text">create-react-app</code>：在项目下生成了 package.json 并安装 React 应用所需要的依赖文件, 最后将 react 的模版代码拷贝到项目中。<code class="language-text">react-scripts</code>：配置 Webpack 来构建 react 应用, 比如语法转换、devServer 等等。下面让我们根据源码来详细的分析下它们到底是如何运作的。</p>\n<h2>create-react-app</h2>\n<ol>\n<li>检查 Node 版本号, 如果小于 4 则无法使用该工具</li>\n</ol>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">let</span> major <span class="token operator">=</span> process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>major <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 检查版本后 开始 creat-react-app 处理流程</span>\n<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./createReactApp\'</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>2.\b 生成<code class="language-text">package.json</code> 并检查 yarn 或者 npm 是否安装了</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token comment">// 检查App name 使用validate-npm-package-name</span>\n<span class="token function">checkAppName</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span>\n\n<span class="token comment">// 检查有没有安装yarn</span>\n<span class="token function">shouldUseYarn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// return execSync(\'yarnpkg --version\', { stdio: \'ignore\' }) ? true : false</span>\n\n<span class="token comment">// 检查npm</span>\n\b\b\b\b<span class="token function">checkThatNpmCanReadCwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> packageJson <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> appName<span class="token punctuation">,</span>\n  version<span class="token punctuation">:</span> <span class="token string">\'0.1.0\'</span><span class="token punctuation">,</span>\n  <span class="token keyword">private</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\nfs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>\n  path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token string">\'package.json\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>packageJson<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span></code></pre>\n      </div>\n<ol start="3">\n<li>安装 React 应用所需要的依赖 <code class="language-text">react</code>, <code class="language-text">react-dom</code>, <code class="language-text">react-scripts</code></li>\n</ol>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  command <span class="token operator">=</span> <span class="token string">\'yarn\'</span> <span class="token operator">||</span> <span class="token string">\'npm\'</span>\n  args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>installArgs<span class="token punctuation">,</span> <span class="token operator">...</span>dependencies<span class="token punctuation">]</span>\n  <span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> args<span class="token punctuation">,</span> <span class="token punctuation">{</span> stdio<span class="token punctuation">:</span> <span class="token string">\'inherit\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  child<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">\'close\'</span><span class="token punctuation">,</span> <span class="token parameter">code</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        command<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>command<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\' \'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token keyword">return</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>react-scripts</h2>\n<p>首先在安装依赖之后, <code class="language-text">create-react-app</code>会调用<code class="language-text">react-scripts/init.js</code>文件用来复制模版文件到项目中, 以及在<code class="language-text">package.json</code>中添加脚手架工具命令。</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token comment">// 添加脚手架命令</span>\nappPackage<span class="token punctuation">.</span>scripts <span class="token operator">=</span> <span class="token punctuation">{</span>\n  start<span class="token punctuation">:</span> <span class="token string">\'react-scripts start\'</span><span class="token punctuation">,</span>\n  build<span class="token punctuation">:</span> <span class="token string">\'react-scripts build\'</span><span class="token punctuation">,</span>\n  test<span class="token punctuation">:</span> <span class="token string">\'react-scripts test --env=jsdom\'</span><span class="token punctuation">,</span>\n  eject<span class="token punctuation">:</span> <span class="token string">\'react-scripts eject\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\nfs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>\n  path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>appPath<span class="token punctuation">,</span> <span class="token string">\'package.json\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>appPackage<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n\n<span class="token comment">// 复制模版文件到项目中</span>\n<span class="token comment">// 拷贝 react-scripts/template中的public和src中的文件</span>\nfs<span class="token punctuation">.</span><span class="token function">copySync</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">,</span> appPath<span class="token punctuation">)</span></code></pre>\n      </div>\n<p>上面在<code class="language-text">scripts</code>中添加的命令中<code class="language-text">start</code>命令是构建 React 应用的核心也就是配置 Webpack。</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token comment">// 引入webpack和dev-server</span>\n<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> WebpackDevServer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack-dev-server\'</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 通过创建一个compiler的方式来加载Webpack的配置</span>\n<span class="token keyword">const</span> compiler <span class="token operator">=</span> <span class="token function">createCompiler</span><span class="token punctuation">(</span>webpack<span class="token punctuation">,</span> config<span class="token punctuation">,</span> appName<span class="token punctuation">,</span> urls<span class="token punctuation">,</span> useYarn<span class="token punctuation">)</span>\n<span class="token keyword">const</span> devServer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebpackDevServer</span><span class="token punctuation">(</span>compiler<span class="token punctuation">,</span> serverConfig<span class="token punctuation">)</span>\n\n<span class="token comment">// 启动 WebpackDevServer.</span>\ndevServer\n  <span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> <span class="token constant">HOST</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isInteractive<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">clearConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">cyan</span><span class="token punctuation">(</span><span class="token string">\'Starting the development server...\\n\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token function">openBrowser</span><span class="token punctuation">(</span>urls<span class="token punctuation">.</span>localUrlForBrowser<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">\'SIGINT\'</span><span class="token punctuation">,</span> <span class="token string">\'SIGTERM\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">sig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>sig<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 当检测到\b\bctrl+c中断程序时 关闭devServer</span>\n      devServer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>从上面<code class="language-text">start</code>的主流程中我们可以看出<code class="language-text">createCompiler</code>和<code class="language-text">new WebpackDevServer(compiler, serverConfig)</code>是配置 Webpack 的关键代码 \b, 下面我们详细分析一下这个两个函数</p>\n<h3>createCompiler</h3>\n<p><code class="language-text">createCompiler</code>其实只是对 webpack 提供的<code class="language-text">webpack</code>接口的一个封装, 它让我们可以更加细腻的控制整个 webpack 构建流程。</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">createCompiler</span><span class="token punctuation">(</span><span class="token parameter">webpack<span class="token punctuation">,</span> config<span class="token punctuation">,</span> appName<span class="token punctuation">,</span> urls<span class="token punctuation">,</span> useYarn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> compiler <span class="token operator">=</span> <span class="token function">webpack</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> handleCompile<span class="token punctuation">)</span>\n\n  <span class="token comment">// 给invalid事件注册一个回调, 给开发者提示正在编译</span>\n  compiler<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">\'invalid\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Compiling...\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 给done事件注册一个回调, 给开发者提示编译完成</span>\n  compiler<span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">\'done\'</span><span class="token punctuation">,</span> <span class="token parameter">stats</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    \b<span class="token comment">// 让webpack提示消息更友好, 分开错误消息和警告消息, 并且直接显示错误消息</span>\n    <span class="token keyword">const</span> messages <span class="token operator">=</span> <span class="token function">formatWebpackMessages</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 提示错误信息策略</span>\n    <span class="token comment">// 有错误存在时: 只提示语法错误, 开发人员可以直观看到语法错误屏蔽无关信息</span>\n    <span class="token comment">// 没有错误存在: 提示警告, 并可以给开发人员一些提示和帮助信息</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>messages<span class="token punctuation">.</span>errors<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token string">\'Failed to compile.\\n\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span>errors<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\'\\n\\n\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n     <span class="token keyword">if</span> <span class="token punctuation">(</span>messages<span class="token punctuation">.</span>warnings<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span>warnings<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\'\\n\\n\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\n        <span class="token string">\'\\nSearch for the \'</span> <span class="token operator">+</span>\n          chalk<span class="token punctuation">.</span><span class="token function">underline</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span><span class="token string">\'keywords\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>\n          <span class="token string">\' to learn more about each warning.\'</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>下面让我们看下上面代码中<code class="language-text">config</code>配置文件, 看它是如何配置 Webpack 的。</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'../config/webpack.config.dev\'</span><span class="token punctuation">)</span>\n\n<span class="token comment">// webpack.config.dev.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 代替webpack-dev-server提供更好的开发体验</span>\n    require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'react-dev-utils/webpackHotDevClient\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 入口文件</span>\n    paths<span class="token punctuation">.</span>appIndexJs<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    filename<span class="token punctuation">:</span> <span class="token string">\'static/js/bundle.js\'</span><span class="token punctuation">,</span> <span class="token comment">// 输出文件名</span>\n    chunkFilename<span class="token punctuation">:</span> <span class="token string">\'static/js/[name].chunk.js\'</span><span class="token punctuation">,</span> <span class="token comment">// code splitting</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 配置linter规范代码</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.(js|jsx|mjs)$/</span><span class="token punctuation">,</span>\n        enforce<span class="token punctuation">:</span> <span class="token string">\'pre\'</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              formatter<span class="token punctuation">:</span> eslintFormatter<span class="token punctuation">,</span>\n              eslintPath<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'eslint\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token comment">// @remove-on-eject-begin</span>\n              baseConfig<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'eslint-config-react-app\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              ignore<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n              useEslintrc<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n              <span class="token comment">// @remove-on-eject-end</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            loader<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'eslint-loader\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        include<span class="token punctuation">:</span> paths<span class="token punctuation">.</span>appSrc<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 编译JS\b</span>\n      <span class="token punctuation">{</span>\n         test<span class="token punctuation">:</span> <span class="token regex">/\\.(js|jsx|mjs)$/</span><span class="token punctuation">,</span>\n            include<span class="token punctuation">:</span> paths<span class="token punctuation">.</span>appSrc<span class="token punctuation">,</span>\n            loader<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'babel-loader\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              <span class="token comment">// @remove-on-eject-begin</span>\n              babelrc<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n              presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'babel-preset-react-app\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              cacheDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 编译CSS</span>\n      <span class="token punctuation">{</span>\n          test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n            use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'style-loader\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                loader<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'css-loader\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                  importLoaders<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                loader<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'postcss-loader\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                  ident<span class="token punctuation">:</span> <span class="token string">\'postcss\'</span><span class="token punctuation">,</span>\n                  <span class="token function-variable function">plugins</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>\n                    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'postcss-flexbugs-fixes\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token function">autoprefixer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                      browsers<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                        <span class="token string">\'>1%\'</span><span class="token punctuation">,</span>\n                        <span class="token string">\'last 4 versions\'</span><span class="token punctuation">,</span>\n                        <span class="token string">\'Firefox ESR\'</span><span class="token punctuation">,</span>\n                        <span class="token string">\'not ie &lt; 9\'</span><span class="token punctuation">,</span> <span class="token comment">// React doesn\'t support IE8 anyway</span>\n                      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                      flexbox<span class="token punctuation">:</span> <span class="token string">\'no-2009\'</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 处理文件</span>\n      <span class="token punctuation">{</span>\n            exclude<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token regex">/\\.(js|jsx|mjs)$/</span><span class="token punctuation">,</span> <span class="token regex">/\\.html$/</span><span class="token punctuation">,</span> <span class="token regex">/\\.json$/</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            loader<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'file-loader\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              name<span class="token punctuation">:</span> <span class="token string">\'static/media/[name].[hash:8].[ext]\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">InterpolateHtmlPlugin</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span>raw<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DefinePlugin</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span>stringified<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 自动运行npm install安装依赖</span>\n    <span class="token keyword">new</span> <span class="token class-name">WatchMissingNodeModulesPlugin</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span>appNodeModules<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">CaseSensitivePathsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>IgnorePlugin</span><span class="token punctuation">(</span><span class="token regex">/^\\.\\/locale$/</span><span class="token punctuation">,</span> <span class="token regex">/moment$/</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>最后让我们了解一下在<code class="language-text">yarn build</code>命令是如何配置生产模式下的 Webpack 配置文件, 除了相同的部分外, 生产模式的配置文件额外做了一些 \b\b 代码的压缩之类的操作, 通常建立 3 个配置文件更易于维护, 一个用于开发, 一个用于生产, 另一个放一些两个模式的通用部分。</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token comment">// 压缩HTML模版</span>\n<span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  inject<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  template<span class="token punctuation">:</span> paths<span class="token punctuation">.</span>appHtml<span class="token punctuation">,</span>\n  minify<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    removeRedundantAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    useShortDoctype<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    removeEmptyAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    removeStyleLinkTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    keepClosingSlash<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minifyJS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minifyCSS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minifyURLs<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// 压缩JS代码</span>\n  <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>optimize<span class="token punctuation">.</span>UglifyJsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    compress<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      warnings<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      comparisons<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    mangle<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      safari10<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      comments<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      ascii_only<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    sourceMap<span class="token punctuation">:</span> shouldUseSourceMap<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// 抽离CSS文件</span>\n  <span class="token keyword">new</span> <span class="token class-name">ExtractTextPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    filename<span class="token punctuation">:</span> cssFilename<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// 生成资源映射表, 使找资源无需解析index.html</span>\n  <span class="token keyword">new</span> <span class="token class-name">ManifestPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    fileName<span class="token punctuation">:</span> <span class="token string">\'asset-manifest.json\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// 使用service worker缓存数据</span>\n  <span class="token keyword">new</span> <span class="token class-name">SWPrecacheWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    dontCacheBustUrlsMatching<span class="token punctuation">:</span> <span class="token regex">/\\.\\w{8}\\./</span><span class="token punctuation">,</span>\n    filename<span class="token punctuation">:</span> <span class="token string">\'service-worker.js\'</span><span class="token punctuation">,</span>\n    <span class="token function">logger</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">\'Total precache size is\'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">\'Skipping static resource\'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span>\n      <span class="token punctuation">}</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    minify<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// For unknown URLs, fallback to the index page</span>\n    navigateFallback<span class="token punctuation">:</span> publicUrl <span class="token operator">+</span> <span class="token string">\'/index.html\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// Ignores URLs starting from /__ (useful for Firebase):</span>\n    navigateFallbackWhitelist<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token regex">/^(?!\\/__).*/</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment">// Don\'t precache sourcemaps (they\'re large) and build asset manifest:</span>\n    staticFileGlobsIgnorePatterns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token regex">/\\.map$/</span><span class="token punctuation">,</span> <span class="token regex">/asset-manifest\\.json$/</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h2>总结</h2>\n<p>分析了<code class="language-text">create-create-app</code>工具源码之后, 我们了解了编写一个脚手架工具的基本流程: 检查当前环境是否可以运行项目, 生成 package.json 并安装相关依赖, 复制模版到项目中。此外我们还了解了如何使用 webpack 来构建 React 应用, 我们可以针对自己的项目需求来对<code class="language-text">create-create-app</code>默认提供的 webpack 进行更改比如增加一个 sass loader \b, 当然我们也可以通过<code class="language-text">eject</code>命令来自己配置 Webpack。</p>',
fields:{tagSlugs:["/tags/react/","/tags/java-script/"]},frontmatter:{title:"搭建React脚手架 create-react-app原理分析",tags:["React","JavaScript"],date:"2019-05-04",description:""},excerpt:"构建 React 应用的第一步是搭建 React 开发环境, \b\b 开发环境是项目的基石也是比较复杂繁琐的一个部分, 因此搭建一个脚手架工具来完成自动化的流程是必不可少的。Facebook 官方提供了一个有效且功能齐全的 React…"}},pathContext:{slug:"/posts/create-react-app"}}}});
//# sourceMappingURL=path---posts-create-react-app-0d9fd56417ed6bda47cf.js.map